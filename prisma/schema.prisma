// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[] @relation("ProjectMembers")
  ownedProjects Project[] @relation("ProjectOwner")
  messages  Message[]
  tasks     Task[]
  createdTasks Task[] @relation("TaskCreatedBy")
}

model Project {
  id          String    @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  ownerId     String
  owner       User      @relation("ProjectOwner", fields: [ownerId], references: [id])
  members     User[]    @relation("ProjectMembers")
  tasks       Task[]
  messages    Message[]
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  status      String    @default("TODO") // TODO, IN_PROGRESS, DONE
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  projectId   String
  project     Project   @relation(fields: [projectId], references: [id])
  assigneeId  String?
  assignee    User?     @relation(fields: [assigneeId], references: [id])
  createdById String
  createdBy   User      @relation("TaskCreatedBy", fields: [createdById], references: [id])
}

model Message {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  senderId  String
  sender    User     @relation(fields: [senderId], references: [id])
}
